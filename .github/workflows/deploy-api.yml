name: Deploy api to ECS

on:
  push:
    branches:
      - main
    # API関連のファイルまたはワークフローファイル自体に変更があった場合のみ、ワークフローを実行する
    paths:
    - './api/**'
    - ./.github/workflows/deploy-api.yml

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # 以降のステップでAWS CLIを使用するため、AWSのクレデンシャル情報を設定する
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    # GitHub Actions実行用のロールを引き継ぐ
    - name: Assume IAM Role
      run: |
        aws sts assume-role --role-arn ${{ secrets.AWS_ROLE_TO_ASSUME }} --role-session-name GitHubActions --output json > assume-role-output.json

        echo "AWS_ACCESS_KEY_ID=$(jq -r .Credentials.AccessKeyId assume-role-output.json)" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=$(jq -r .Credentials.SecretAccessKey assume-role-output.json)" >> $GITHUB_ENV
        echo "AWS_SESSION_TOKEN=$(jq -r .Credentials.SessionToken assume-role-output.json)" >> $GITHUB_ENV

    - name: Login to Amazon ECR
      id: login-ecr-api
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image-api
      env:
        ECR_REGISTRY: ${{ steps.login-ecr-api.outputs.registry }}
        ECR_REPOSITORY: "tunetrail-api"
        IMAGE_TAG: latest
      run: |
        cd api
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    # タスク定義を取得する
    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition tunetrail-api --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def-api
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: tunetrail-api
        image: ${{ steps.build-image-api.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def-api.outputs.task-definition }}
        service: tunetrail-api
        cluster: tunetrail
        wait-for-service-stability: true
