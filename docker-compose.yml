version: "3.9"
services:
  restapi:
    container_name: tunetrail-restapi
    hostname: tunetrail-restapi
    build:
      context: .
      target: dev
      dockerfile: ./restapi/Dockerfile
    environment:
      TUNETRAIL_ENV: dev
      PORT: 8080
      TUNETRAIL_DB_HOST: tunetrail-db
      TUNETRAIL_DB_PORT: 5432
      TUNETRAIL_DB_USER: tunetrail
      TUNETRAIL_DB_PASSWORD: tunetrail
      TUNETRAIL_DB_NAME: tunetrail
    volumes:
      # .gitを含むルートディレクトリを指定する
      - .:/workspace:cached
    ports:
      - "18000:8080"
    networks:
      - tunetrail-internal
      - tunetrail-external
    command: sleep infinity

  db:
    container_name: tunetrail-db
    hostname: tunetrail-db
    image: postgres:15.2
    platform: linux/amd64
    environment:
      POSTGRES_USER: tunetrail
      POSTGRES_PASSWORD: tunetrail
      POSTGRES_DB: tunetrail
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # dockerコンテナ起動時に自動で実行される.sqlファイル
      - ./database/_tools/postgres/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./database/_tools/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - "5555:5432"
    networks:
      - tunetrail-internal
    # 設定ファイルを読み込む
    command: -c 'config_file=/etc/postgresql/postgresql.conf'

  webapp:
    container_name: tunetrail-webapp
    hostname: tunetrail-webapp
    build:
      context: .
      target: dev
      dockerfile: ./webapp/Dockerfile
    tty: true
    volumes:
      # .gitを含むルートディレクトリを指定する
      - .:/workspace:cached
    ports:
      - '3000:3000'
    networks:
      - tunetrail-external

networks:
  # 内部ネットワーク
  tunetrail-internal:
    driver: bridge
    internal: true
  # 公開ネットワーク
  tunetrail-external:
    driver: bridge
    external: true

volumes:
  postgres-data:
